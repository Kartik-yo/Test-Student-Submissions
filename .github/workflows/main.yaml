name: Build and Run Java Project on Multiple Repos

on:
#  workflow_dispatch:
  push:
    branches:
      - main  # Trigger workflow on pushes to the main branch
#  pull_request:
#    branches:
#      - main  # Trigger workflow on pull requests targeting main

jobs:
  build-run:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'  # Specify Java version
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Convert repositories.txt to JSON array
      - name: Convert repositories.txt to JSON array
       id: convert_repos
        run: |
#          # Read the repositories.txt file and convert it to a JSON array format
          REPO_LIST=$(cat repositories.txt | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "REPO_LIST=$REPO_LIST" >> $GITHUB_ENV  # Set REPO_LIST as an environment variable

      # Step 5: Loop through each repository in the list and build/test it
      - name: Run Build, Tests, and Code Checks on Multiple Repos
        run: |
 #         # Convert the REPO_LIST from the environment variable to an array
         REPOS=($REPO_LIST)
          for REPO in "${REPOS[@]}"; do
            echo "Processing $REPO..."

            # Clone the repository
            git clone https://github.com/$REPO.git

            # Navigate into the cloned repository
            cd $(basename $REPO)

            # Step 6: Run Maven clean, install, test, and JaCoCo code coverage
           mvn clean install jacoco:prepare-agent jacoco:report

            # Step 7: Run Checkstyle plugin for code quality
            mvn checkstyle:checkstyle

            # Step 8: SonarQube/Cloud analysis (SonarCloud)
            # Make sure you set up your SONAR_TOKEN as a secret in GitHub repository
            mvn sonar:sonar \
              -Dsonar.projectKey=$REPO \
              -Dsonar.organization=<your-org> \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=$SONAR_TOKEN

            # Step 9: Optionally, run the Main class if necessary
#            java -cp target/$(basename $REPO)-1.0-SNAPSHOT.jar app.Main

            # Go back to the root directory for the next iteration
   #         done

      # Step 10: Upload Code Coverage Results to GitHub Actions (Optional, if you want to see coverage results in Actions)
      - name: Upload JaCoCo Code Coverage to GitHub Actions
        if: success()
        uses: codecov/codecov-action@v3
        with:
          file: target/site/jacoco/jacoco.xml  # Specify the JaCoCo report file
